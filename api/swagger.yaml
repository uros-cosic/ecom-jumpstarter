openapi: 3.0.0
info:
    title: Ecom jumpstarter
    version: 1.0.0

paths:
    /api/store/addresses:
        post:
            summary: Creates address
            tags:
                - Store/Addresses
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Address'
            responses:
                201:
                    description: Address created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Address'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/store/addresses/{id}:
        get:
            summary: Gets the address
            tags:
                - Store/Addresses
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Address found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Address'
                404:
                    description: Not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            summary: Updates the address
            tags:
                - Store/Addresses
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Address'
            responses:
                200:
                    description: Address updated
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Address'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            summary: Deletes the address
            tags:
                - Store/Addresses
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description: Address deleted
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/auth/login:
        post:
            summary: Logs in a user
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                password:
                                    type: string
            responses:
                200:
                    description: Login successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token:
                                        type: string
                                    refreshToken:
                                        type: string
                                    data:
                                        $ref: '#/components/schemas/User'
                400:
                    description: Invalid credentials
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/auth/register:
        post:
            summary: Registers a new user
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                email:
                                    type: string
                                    format: email
                                password:
                                    oneOf:
                                        - type: string
                                        - type: 'null'
                                region:
                                    type: string
                                googleId:
                                    oneOf:
                                        - type: string
                                        - type: 'null'
            responses:
                201:
                    description: Registration successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token:
                                        type: string
                                    refreshToken:
                                        type: string
                                    data:
                                        $ref: '#/components/schemas/User'
                400:
                    description: Registration failed
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/auth/logout:
        post:
            summary: Logs out a user
            tags:
                - Auth
            responses:
                200:
                    description: Logout successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: 'null'
                400:
                    description: Logout failed
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/auth/changePassword:
        patch:
            summary: Changes user password
            tags:
                - Auth
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                passwordCurrent:
                                    type: string
                                password:
                                    type: string
            responses:
                200:
                    description: Password updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token:
                                        type: string
                                    refreshToken:
                                        type: string
                                    data:
                                        $ref: '#/components/schemas/User'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                400:
                    description: Password update failed
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/auth/resetPassword:
        post:
            summary: Changes password
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                token:
                                    type: string
                                password:
                                    type: string
            responses:
                200:
                    description: Password changed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token:
                                        type: string
                                    refreshToken:
                                        type: string
                                    data:
                                        $ref: '#/components/schemas/User'
                400:
                    description: Password reset failed
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/users:
        get:
            summary: Gets users
            tags:
                - Admin/Users
            security:
                - bearerAuth: []
            x-roles:
                - admin
            responses:
                200:
                    description: Returns users
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/User'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            summary: Creates user
            tags:
                - Admin/Users
            security:
                - bearerAuth: []
            x-roles:
                - admin
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
            responses:
                201:
                    description: Returns created user
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/User'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/users/{id}:
        get:
            summary: Gets the user
            tags:
                - Admin/Users
            security:
                - bearerAuth: []
            x-roles:
                - admin
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns user
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/User'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            summary: Updates user
            tags:
                - Admin/Users
            security:
                - bearerAuth: []
            x-roles:
                - admin
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns updated user
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/User'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            summary: Deletes user
            tags:
                - Admin/Users
            security:
                - bearerAuth: []
            x-roles:
                - admin
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description: User deleted
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/orders:
        get:
            summary: Gets orders
            tags:
                - Admin/Orders
            security:
                - bearerAuth: []
            x-roles:
                - admin
            responses:
                200:
                    description: Returns orders
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Order'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /api/admin/orders/{id}:
        get:
            summary: Get order
            tags:
                - Admin/Orders
            security:
                - bearerAuth: []
            x-roles:
                - admin
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns order
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Order'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            summary: Updates order
            tags:
                - Admin/Orders
            security:
                - bearerAuth: []
            x-roles:
                - admin
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Order'
            responses:
                200:
                    description: Returns updated order
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Order'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/analytics/site:
        get:
            summary: Get site analytics
            tags:
                - Admin/SiteAnalytics
            security:
                - bearerAuth: []
            x-roles:
                - admin
            responses:
                200:
                    description: Returns site analytics
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/SiteAnalytics'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/analytics/site/{id}:
        get:
            summary: Gets site analytic
            tags:
                - Admin/SiteAnalytics
            security:
                - bearerAuth: []
            x-roles:
                - admin
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns site analytic
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/SiteAnalytics'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/analytics/orders:
        get:
            summary: Get orders analytics
            tags:
                - Admin/OrderAnalytics
            security:
                - bearerAuth: []
            x-roles:
                - admin
            responses:
                200:
                    description: Returns orders analytics
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/OrderAnalytics'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/analytics/orders/{id}:
        get:
            summary: Gets order analytic
            tags:
                - Admin/OrderAnalytics
            security:
                - bearerAuth: []
            x-roles:
                - admin
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns order analytic
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/OrderAnalytics'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/uploads/image:
        post:
            summary: Upload image
            tags:
                - Admin/Uploads
            security:
                - bearerAuth: []
            x-roles:
                - admin
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                image:
                                    type: string
                                    format: binary
            responses:
                200:
                    description: Returns uploaded image link
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: string
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/uploads/products/thumbnail:
        post:
            summary: Upload product thumbnail
            tags:
                - Admin/Uploads
            security:
                - bearerAuth: []
            x-roles:
                - admin
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                thumbnail:
                                    type: string
                                    format: binary
            responses:
                200:
                    description: Returns uploaded image link
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: string
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/uploads/products/images:
        post:
            summary: Upload product images
            tags:
                - Admin/Uploads
            security:
                - bearerAuth: []
            x-roles:
                - admin
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                images:
                                    type: string
                                    format: binary
            responses:
                200:
                    description: Returns uploaded image links
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            type: string
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/uploads/sales/thumbnail:
        post:
            summary: Upload sale thumbnail
            tags:
                - Admin/Uploads
            security:
                - bearerAuth: []
            x-roles:
                - admin
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                thumbnail:
                                    type: string
                                    format: binary
            responses:
                200:
                    description: Returns uploaded image link
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: string
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/uploads/blogs/thumbnail:
        post:
            summary: Upload blog thumbnail
            tags:
                - Admin/Uploads
            security:
                - bearerAuth: []
            x-roles:
                - admin
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                thumbnail:
                                    type: string
                                    format: binary
            responses:
                200:
                    description: Returns uploaded image link
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: string
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/uploads/sizeMetrics/thumbnail:
        post:
            summary: Upload size metric thumbnail
            tags:
                - Admin/Uploads
            security:
                - bearerAuth: []
            x-roles:
                - admin
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                thumbnail:
                                    type: string
                                    format: binary
            responses:
                200:
                    description: Returns uploaded image link
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: string
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/regions:
        get:
            summary: Get regions
            tags:
                - Admin/Regions
            security:
                - bearerAuth: []
            x-roles:
                - admin
            responses:
                200:
                    description: Returns regions
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Region'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            summary: Creates region
            tags:
                - Admin/Regions
            security:
                - bearerAuth: []
            x-roles:
                - admin
            responses:
                201:
                    description: Creates region
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Region'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/products:
        get:
            summary: Gets all products
            tags:
                - Admin/Products
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Returns all products
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Product'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        post:
            summary: Creates a new product
            tags:
                - Admin/Products
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Product'
            responses:
                201:
                    description: Product created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Product'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/products/{id}:
        get:
            summary: Gets a product by ID
            tags:
                - Admin/Products
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the product
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Product'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Product not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        patch:
            summary: Updates a product by ID
            tags:
                - Admin/Products
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Product'
            responses:
                200:
                    description: Product updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Product'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Product not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        delete:
            summary: Deletes a product by ID
            tags:
                - Admin/Products
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description: Product deleted successfully
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Product not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

            /api/admin/regions/{id}:
                get:
                    summary: Gets region
                    tags:
                        - Admin/Regions
                    parameters:
                        - in: path
                          name: id
                          required: true
                          schema:
                              type: string
                    security:
                        - bearerAuth: []
                    x-roles:
                        - admin
                    responses:
                        200:
                            description: Returns the region
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            data:
                                                $ref: '#/components/schemas/Region'
                        401:
                            description: Unauthorized
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Error'
                        403:
                            description: Forbidden
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Error'
                patch:
                    summary: Updates region
                    tags:
                        - Admin/Regions
                    parameters:
                        - in: path
                          name: id
                          required: true
                          schema:
                              type: string
                    security:
                        - bearerAuth: []
                    x-roles:
                        - admin
                    responses:
                        200:
                            description: Updates region
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            data:
                                                $ref: '#/components/schemas/Region'
                        401:
                            description: Unauthorized
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Error'
                        403:
                            description: Forbidden
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Error'
                delete:
                    summary: Deletes region
                    tags:
                        - Admin/Regions
                    parameters:
                        - in: path
                          name: id
                          required: true
                          schema:
                              type: string
                    security:
                        - bearerAuth: []
                    x-roles:
                        - admin
                    responses:
                        204:
                            description: Deletes region
                        401:
                            description: Unauthorized
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Error'
                        403:
                            description: Forbidden
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Error'

    /api/admin/productCategories:
        get:
            summary: Gets all product categories
            tags:
                - Admin/ProductCategories
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Returns all product categories
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/ProductCategory'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        post:
            summary: Creates a new product category
            tags:
                - Admin/ProductCategories
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProductCategory'
            responses:
                201:
                    description: Product category created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ProductCategory'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/productCategories/{id}:
        get:
            summary: Gets a product category by ID
            tags:
                - Admin/ProductCategories
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the product category
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ProductCategory'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Product category not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        patch:
            summary: Updates a product category by ID
            tags:
                - Admin/ProductCategories
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProductCategory'
            responses:
                200:
                    description: Product category updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ProductCategory'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Product category not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        delete:
            summary: Deletes a product category by ID
            tags:
                - Admin/ProductCategories
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description: Product category deleted successfully
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Product category not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/productCollections:
        get:
            summary: Gets all product collections
            tags:
                - Admin/ProductCollections
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Returns all product collections
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/ProductCollection'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        post:
            summary: Creates a new product collection
            tags:
                - Admin/ProductCollections
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProductCollection'
            responses:
                201:
                    description: Product collection created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ProductCollection'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/productCollections/{id}:
        get:
            summary: Gets a product collection by ID
            tags:
                - Admin/ProductCollections
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the product collection
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ProductCollection'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Product collection not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        patch:
            summary: Updates a product collection by ID
            tags:
                - Admin/ProductCollections
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProductCollection'
            responses:
                200:
                    description: Product collection updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ProductCollection'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Product collection not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        delete:
            summary: Deletes a product collection by ID
            tags:
                - Admin/ProductCollections
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description: Product collection deleted successfully
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Product collection not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/sales:
        get:
            summary: Gets all sales
            tags:
                - Admin/Sales
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Returns all sales
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Sale'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        post:
            summary: Creates a new sale
            tags:
                - Admin/Sales
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Sale'
            responses:
                201:
                    description: Sale created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Sale'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/sales/{id}:
        get:
            summary: Gets a sale by ID
            tags:
                - Admin/Sales
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the sale
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Sale'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Sale not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        patch:
            summary: Updates a sale by ID
            tags:
                - Admin/Sales
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Sale'
            responses:
                200:
                    description: Sale updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Sale'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Sale not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        delete:
            summary: Deletes a sale by ID
            tags:
                - Admin/Sales
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description: Sale deleted successfully
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Sale not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/paymentMethods:
        get:
            summary: Gets all payment methods
            tags:
                - Admin/PaymentMethods
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Returns all payment methods
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/PaymentMethod'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        post:
            summary: Creates a new payment method
            tags:
                - Admin/PaymentMethods
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PaymentMethod'
            responses:
                201:
                    description: Payment method created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/PaymentMethod'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/paymentMethods/{id}:
        get:
            summary: Gets a payment method by ID
            tags:
                - Admin/PaymentMethods
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the payment method
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/PaymentMethod'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Payment method not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        patch:
            summary: Updates a payment method by ID
            tags:
                - Admin/PaymentMethods
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PaymentMethod'
            responses:
                200:
                    description: Payment method updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/PaymentMethod'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Payment method not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        delete:
            summary: Deletes a payment method by ID
            tags:
                - Admin/PaymentMethods
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description: Payment method deleted successfully
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Payment method not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/discounts:
        get:
            summary: Gets all discounts
            tags:
                - Admin/Discounts
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Returns all discounts
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Discount'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        post:
            summary: Creates a new discount
            tags:
                - Admin/Discounts
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Discount'
            responses:
                201:
                    description: Discount created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Discount'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/discounts/{id}:
        get:
            summary: Gets a discount by ID
            tags:
                - Admin/Discounts
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the discount
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Discount'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Discount not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        patch:
            summary: Updates a discount by ID
            tags:
                - Admin/Discounts
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Discount'
            responses:
                200:
                    description: Discount updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Discount'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Discount not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        delete:
            summary: Deletes a discount by ID
            tags:
                - Admin/Discounts
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description: Discount deleted successfully
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Discount not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/countries:
        get:
            summary: Gets all countries
            tags:
                - Admin/Countries
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Returns all countries
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Country'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/countries/{id}:
        get:
            summary: Gets a country by ID
            tags:
                - Admin/Countries
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the country
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Country'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Country not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/currencies:
        get:
            summary: Gets all currencies
            tags:
                - Admin/Currencies
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Returns all currencies
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Currency'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/currencies/{id}:
        get:
            summary: Gets a currency by ID
            tags:
                - Admin/Currencies
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the currency
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Currency'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Currency not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/shippingMethods:
        get:
            summary: Gets all shipping methods
            tags:
                - Admin/ShippingMethods
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Returns all shipping methods
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/ShippingMethod'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        post:
            summary: Creates a new shipping method
            tags:
                - Admin/ShippingMethods
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ShippingMethod'
            responses:
                201:
                    description: Shipping method created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ShippingMethod'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/shippingMethods/{id}:
        get:
            summary: Gets a shipping method by ID
            tags:
                - Admin/ShippingMethods
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the shipping method
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ShippingMethod'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Shipping method not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        patch:
            summary: Updates a shipping method by ID
            tags:
                - Admin/ShippingMethods
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ShippingMethod'
            responses:
                200:
                    description: Shipping method updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ShippingMethod'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Shipping method not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        delete:
            summary: Deletes a shipping method by ID
            tags:
                - Admin/ShippingMethods
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description: Shipping method deleted successfully
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Shipping method not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/blogs:
        get:
            summary: Gets all blogs
            tags:
                - Admin/Blogs
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Returns all blogs
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Blog'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        post:
            summary: Creates a new blog post
            tags:
                - Admin/Blogs
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Blog'
            responses:
                201:
                    description: Blog post created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Blog'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/blogs/{id}:
        get:
            summary: Gets a blog post by ID
            tags:
                - Admin/Blogs
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the blog post
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Blog'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Blog post not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        patch:
            summary: Updates a blog post by ID
            tags:
                - Admin/Blogs
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Blog'
            responses:
                200:
                    description: Blog post updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Blog'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Blog post not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        delete:
            summary: Deletes a blog post by ID
            tags:
                - Admin/Blogs
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description: Blog post deleted successfully
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Blog post not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/newsletters:
        get:
            summary: Gets all newsletters
            tags:
                - Admin/Newsletters
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Returns all newsletters
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Newsletter'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/newsletters/{id}:
        get:
            summary: Gets a newsletter by ID
            tags:
                - Admin/Newsletters
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the newsletter
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Newsletter'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Newsletter not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        patch:
            summary: Updates a newsletter by ID
            tags:
                - Admin/Newsletters
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Newsletter'
            responses:
                200:
                    description: Newsletter updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Newsletter'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Newsletter not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/productReviews:
        get:
            summary: Gets all product reviews
            tags:
                - Admin/ProductReviews
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Returns all product reviews
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/ProductReview'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/productReviews/{id}:
        patch:
            summary: Updates a product review by ID
            tags:
                - Admin/ProductReviews
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProductReview'
            responses:
                200:
                    description: Product review updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ProductReview'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Product review not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        delete:
            summary: Deletes a product review by ID
            tags:
                - Admin/ProductReviews
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description: Product review deleted successfully
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Product review not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/sizeMetrics:
        get:
            summary: Gets all size metrics
            tags:
                - Admin/SizeMetrics
            security:
                - bearerAuth: []
            responses:
                200:
                    description: Returns all size metrics
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/SizeMetric'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        post:
            summary: Creates a new size metric
            tags:
                - Admin/SizeMetrics
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SizeMetric'
            responses:
                201:
                    description: Size metric created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/SizeMetric'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                403:
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/admin/sizeMetrics/{id}:
        get:
            summary: Gets a size metric by ID
            tags:
                - Admin/SizeMetrics
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the size metric
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/SizeMetric'
                404:
                    description: Size metric not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

        patch:
            summary: Updates a size metric by ID
            tags:
                - Admin/SizeMetrics
            security:
                - bearerAuth: []

components:
    schemas:
        Error:
            type: object
            properties:
                message:
                    type: string

        User:
            type: object
            properties:
                _id:
                    type: string
                name:
                    type: string
                email:
                    type: string
                role:
                    type: string
                cart:
                    type: string
                region:
                    type: string
                passwordChangedAt:
                    oneOf:
                        - type: string
                          format: date-time
                        - type: 'null'
                resetPasswordToken:
                    oneOf:
                        - type: string
                        - type: 'null'
                resetPasswordExpires:
                    oneOf:
                        - type: string
                        - type: 'null'
                active:
                    type: boolean
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        Address:
            type: object
            properties:
                _id:
                    type: string
                user:
                    oneOf:
                        - type: string
                        - type: 'null'
                company:
                    oneOf:
                        - type: string
                        - type: 'null'
                firstName:
                    type: string
                lastName:
                    type: string
                address:
                    type: string
                city:
                    type: string
                country:
                    type: string
                province:
                    oneOf:
                        - type: string
                        - type: 'null'
                postalCode:
                    type: string
                phone:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        Order:
            type: object
            properties:
                _id:
                    type: string
                customer:
                    oneOf:
                        - type: string
                        - type: 'null'
                cart:
                    type: string
                payment:
                    oneOf:
                        - type: string
                        - type: 'null'
                status:
                    type: string
                fulfillmentStatus:
                    type: string
                region:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        SiteAnalytics:
            type: object
            properties:
                _id:
                    type: string
                date:
                    type: string
                    format: date-time
                totalVisits:
                    type: number
                newSignups:
                    type: number
                geoData:
                    type: array
                    items:
                        type: object
                        properties:
                            _id:
                                type: string
                            country:
                                type: string
                            visits:
                                type: number
                deviceData:
                    type: array
                    items:
                        type: object
                        properties:
                            _id:
                                type: string
                            deviceType:
                                type: string
                            visits:
                                type: number
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        OrderAnalytics:
            type: object
            properties:
                _id:
                    type: string
                date:
                    type: string
                    format: date-time
                totalOrders:
                    type: number
                revenue:
                    type: number
                averageOrderValue:
                    type: number
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        Region:
            type: object
            properties:
                _id:
                    type: string
                name:
                    type: string
                currency:
                    type: string
                countries:
                    type: array
                    items:
                        type: string
                taxRate:
                    type: number
                metadata:
                    type: object
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        Product:
            type: object
            properties:
                _id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                details:
                    oneOf:
                        - type: string
                        - type: 'null'
                keywords:
                    type: array
                    items:
                        type: string
                handle:
                    type: string
                type:
                    type: string
                thumbnail:
                    type: string
                images:
                    type: array
                    items:
                        type: string
                productCategory:
                    oneOf:
                        - type: string
                        - type: 'null'
                productCollection:
                    oneOf:
                        - type: string
                        - type: 'null'
                options:
                    oneOf:
                        - type: array
                          items:
                              type: object
                              properties:
                                  name:
                                      type: string
                                  values:
                                      type: array
                                      items:
                                          type: string
                        - type: 'null'
                variants:
                    oneOf:
                        - type: array
                          items:
                              type: object
                              properties:
                                  title:
                                      type: string
                                  options:
                                      type: array
                                      items:
                                          type: object
                                          properties:
                                              name:
                                                  type: string
                                              value:
                                                  type: string
                                  sku:
                                      oneOf:
                                          - type: string
                                          - type: 'null'
                                  barcode:
                                      oneOf:
                                          - type: string
                                          - type: 'null'
                                  ean:
                                      oneOf:
                                          - type: string
                                          - type: 'null'
                                  upc:
                                      oneOf:
                                          - type: string
                                          - type: 'null'
                                  hsCode:
                                      oneOf:
                                          - type: string
                                          - type: 'null'
                                  midCode:
                                      oneOf:
                                          - type: string
                                          - type: 'null'
                                  originCountry:
                                      oneOf:
                                          - type: string
                                          - type: 'null'
                                  weight:
                                      oneOf:
                                          - type: string
                                          - type: 'null'
                                  length:
                                      oneOf:
                                          - type: string
                                          - type: 'null'
                                  height:
                                      oneOf:
                                          - type: string
                                          - type: 'null'
                                  width:
                                      oneOf:
                                          - type: string
                                          - type: 'null'
                                  material:
                                      oneOf:
                                          - type: string
                                          - type: 'null'
                                  price:
                                      type: number
                                  quantity:
                                      type: number
                        - type: 'null'
                region:
                    type: string
                sizeGuide:
                    oneOf:
                        - type: string
                        - type: 'null'
                price:
                    type: number
                quantity:
                    type: number
                active:
                    type: boolean
                metadata:
                    type: object
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        ProductCategory:
            type: object
            properties:
                _id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                handle:
                    type: string
                keywords:
                    type: array
                    items:
                        type: string
                parentCategory:
                    oneOf:
                        - type: string
                        - type: 'null'
                metadata:
                    type: object
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        ProductCollection:
            type: object
            properties:
                _id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                handle:
                    type: string
                keywords:
                    type: array
                    items:
                        type: string
                metadata:
                    type: object
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        Sale:
            type: object
            properties:
                _id:
                    type: string
                name:
                    type: string
                products:
                    type: array
                    items:
                        type: string
                type:
                    type: string
                region:
                    type: string
                thumbnail:
                    type: string
                dicsountPercentage:
                    oneOf:
                        - type: number
                        - type: 'null'
                discountAmount:
                    oneOf:
                        - type: number
                        - type: 'null'
                startDate:
                    oneOf:
                        - type: string
                          format: date-time
                        - type: 'null'
                endDate:
                    oneOf:
                        - type: string
                          format: date-time
                        - type: 'null'
                metadata:
                    type: object
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        PaymentMethod:
            type: object
            properties:
                _id:
                    type: string
                name:
                    type: string
                region:
                    type: string
                metadata:
                    type: object
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        Discount:
            type: object
            properties:
                _id:
                    type: string
                code:
                    type: string
                type:
                    type: string
                amount:
                    oneOf:
                        - type: number
                        - type: 'null'
                percentage:
                    oneOf:
                        - type: number
                        - type: 'null'
                usageLimit:
                    type: number
                usageCount:
                    type: number
                validFrom:
                    oneOf:
                        - type: string
                          format: date-time
                        - type: 'null'
                validTo:
                    oneOf:
                        - type: string
                          format: date-time
                        - type: 'null'
                metadata:
                    type: object
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        Country:
            type: object
            properties:
                _id:
                    type: string
                name:
                    type: string
                iso_2:
                    type: string
                region:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        Currency:
            type: object
            properties:
                _id:
                    type: string
                name:
                    type: string
                code:
                    type: string
                symbol:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        ShippingMethod:
            type: object
            properties:
                _id:
                    type: string
                name:
                    type: string
                cost:
                    type: number
                region:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        Blog:
            type: object
            properties:
                _id:
                    type: string
                title:
                    type: string
                description:
                    type: string
                handle:
                    type: string
                content:
                    type: string
                thumbnail:
                    type: string
                author:
                    oneOf:
                        - type: string
                        - type: 'null'
                keywords:
                    type: array
                    items:
                        type: string
                region:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        Newsletter:
            type: object
            properties:
                _id:
                    type: string
                email:
                    type: string
                region:
                    type: string
                canceledAt:
                    oneOf:
                        - type: string
                          format: date-time
                        - type: 'null'
                active:
                    type: boolean
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        ProductReview:
            type: object
            properties:
                _id:
                    type: string
                product:
                    type: string
                customer:
                    type: string
                order:
                    type: string
                rating:
                    type: number
                region:
                    type: string
                comment:
                    oneOf:
                        - type: string
                        - type: 'null'
                active:
                    type: boolean
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        SizeMetric:
            type: object
            properties:
                _id:
                    type: string
                name:
                    type: string
                image:
                    type: string
                metadata:
                    type: object
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
